angular.module("cms.users",["ngRoute","cms.shared"]).constant("_",window._).constant("users.modulePath","/Admin/Modules/Users/Js/");
angular.module("cms.users").config(["$routeProvider","shared.routingUtilities","users.modulePath",function(e,r,s){r.registerCrudRoutes(e,s,"User")}]);
angular.module("cms.users").factory("users.userService",["$http","shared.serviceBase","users.options",function(t,e,r){var u={},n=e+"users";function s(e){return n+"/"+e}function o(e){return(e=e||{}).userAreaCode=r.userAreaCode,e}return u.getAll=function(e){return e=o(e),t.get(n,{params:e})},u.getById=function(e){return t.get(s(e))},u.add=function(e){return(e=o(e)).generatePassword=!0,t.post(n,e)},u.update=function(e){return t.patch(s(e.userId),e)},u.resetPassword=function(e){return t.put(s(e)+"/reset-password")},u.updateVerificationStatus=function(e,r){return t.put(s(e)+"/verification-status",{userId:e,isVerified:r})},u.remove=function(e){return t.delete(s(e))},u}]);
angular.module("cms.users").controller("AddUserController",["$location","_","shared.stringUtilities","shared.LoadState","shared.roleService","users.userService","users.options",function(e,o,t,a,n,r,s){var d=this;function i(){d.globalLoadState.on(),r.add(d.command).then(c).finally(d.globalLoadState.off)}function l(){c()}function c(){e.path("/")}n.getSelectionList(s.userAreaCode).then(function(e){e&&(d.roles=e.items,1===e.items.length&&(d.command.roleId=e.items[0].roleId))}),d.command={},d.globalLoadState=new a,d.editMode=!1,d.userArea=s,d.isCofoundryAdmin="COF"===s.userAreaCode,d.save=i,d.cancel=l}]);
angular.module("cms.users").controller("UserDetailsController",["$routeParams","$location","$q","shared.LoadState","shared.modalDialogService","shared.permissionValidationService","shared.roleService","shared.currentUser","users.userService","users.options",function(t,e,n,r,s,a,o,i,u,d){var l=this,c=i.userId==t.id;function m(){l.editMode=!0,l.mainForm.formStatus.clear()}function f(){C(l.saveLoadState),u.update(l.command).then(w.bind(null,"Changes were saved successfully")).finally(F.bind(null,l.saveLoadState))}function h(){l.editMode=!1,l.command=p(),l.mainForm.formStatus.clear()}function S(){var e={title:"Reset Password",message:"Resetting a password will sign the user out of all sessions and email them a new temporary password that needs to be changed at first sign in.<br><br>Do you want to continue?",okButtonTitle:"Yes, reset it",onOk:function(){return C(),u.resetPassword(l.user.userId).then(w.bind(null,"Password reset, notification sent.")).finally(F)}};s.confirm(e)}function v(){var e={title:"Delete User",message:"Are you sure you want to delete this user?",okButtonTitle:"Yes, delete it",onOk:function(){return C(),u.remove(l.user.userId).then(A).catch(F)}};s.confirm(e)}function w(e){return g().then(b).then(l.mainForm.formStatus.success.bind(null,e))}function g(){var e=t.id;return u.getById(e).then(function(e){!function(e){var t=!0,n="COF"===d.userAreaCode?"COFUSR":"COFUSN";e&&("Deleted"===e.accountStatus?(t=!1,l.mainForm.formStatus.error("This user cannot be edited because it has been deleted.")):e.role.isSuperAdminRole&&!i.isSuperAdmin&&(t=!1,l.mainForm.formStatus.error("You need to be in the super admin role to update this user.")),l.canUpdate=t&&a.canUpdate(n),l.canDelete=t&&!c&&a.canDelete(n),l.canResetPassword=t&&d.allowPasswordSignIn&&d.useEmailAsUsername&&!c&&a.hasPermission(n+"RSTPWD"))}(l.user=e)})}function b(){l.command=p(),l.editMode=!1}function p(){var e=_.pick(l.user,"userId","firstName","lastName","email","requirePasswordChange","isEmailConfirmed","displayName");return l.user.accountVerifiedDate&&(e.isAccountVerified=!0),"Active"===l.user.accountStatus&&(e.isActive=!0),l.user.role&&(e.roleId=l.user.role.roleId),e.username=l.userArea.useEmailAsUsername?null:l.user.username,e}function A(){e.path("")}function C(e){l.globalLoadState.on(),e&&_.isFunction(e.on)&&e.on()}function F(e){l.globalLoadState.off(),e&&_.isFunction(e.off)&&e.off()}l.edit=m,l.save=f,l.cancel=h,l.resetPassword=S,l.deleteUser=v,l.editMode=!1,l.globalLoadState=new r,l.saveLoadState=new r,l.formLoadState=new r(!0),l.userArea=d,l.isCofoundryAdmin="COF"===d.userAreaCode,l.isCurrentUser=c,n.all([o.getSelectionList(d.userAreaCode).then(function(e){e&&(l.roles=e.items)}),g()]).then(b).then(F.bind(null,l.formLoadState))}]);
angular.module("cms.users").controller("UserListController",["_","shared.LoadState","shared.SearchQuery","shared.urlLibrary","shared.permissionValidationService","users.userService","users.options",function(a,t,r,n,i,e,s){var u=this;function o(e){u.isFilterVisible=a.isUndefined(e)?!u.isFilterVisible:e}function c(){o(!1),l()}function l(){return u.gridLoadState.on(),e.getAll(u.query.getParameters()).then(function(e){u.result=e,u.gridLoadState.off()})}!function(){u.userArea=s,u.urlLibrary=n,u.gridLoadState=new t,u.query=new r({onChanged:c,defaultParams:{accountStatus:"Active"}}),u.filter=u.query.getFilters(),u.toggleFilter=o,u.filterOptions={accountStatus:[{name:"Any",value:"Any"},{name:"Active",value:"Active"},{name:"Deactivated",value:"Deactivated"}]};var e="COF"===s.userAreaCode?"COFUSR":"COFUSN";u.canRead=i.canRead(e),u.canUpdate=i.canUpdate(e),u.canCreate=i.canCreate(e),o(!1),l()}()}]);